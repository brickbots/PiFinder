{
    // Note that the JSON5 library that we use for configuration supports comments in JSON files.
    "version": 1,
    "disable_existing_loggers": false, // THIS MUST BE FALSE for logging to work
    "formatters": {
        "default": {
            "format": "%(asctime)s %(processName)s-%(name)s:%(levelname)s:%(message)s"
        }
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "level": "ERROR",
            "formatter": "default",
            "stream": "ext://sys.stdout"
        },
        "null": {
            "class": "logging.NullHandler",
            "level": "ERROR"
        }
    },
    "loggers": {

        /////////////////////////////////////////////////////////////////
        ////// root logger
        //
        // This is the main logging configuration
        //
        "": {
            "level": "ERROR",
            "handlers": ["console"]
            // The file handler is added automatically by code
        },

        /////////////////////////////////////////////////////////////////
        ////// Web Server2 Subsystem (Flask with Jinja2 i18n)
        //
        // Supported logger hierarchy:
        //   Server2
        //
        "Server": {
            "level": "DEBUG",
            "handlers": ["console"]
        },

        /////////////////////////////////////////////////////////////////
        ////// Flask Framework
        //
        // Flask and related component logging
        //
        "werkzeug": {
            "level": "DEBUG",
            "handlers": ["console"]           
        },
        "flask": {
            "level": "DEBUG",
            "handlers": ["console"]           
        },
        "flask.app": {
            "level": "DEBUG",
            "handlers": ["console"]           
        },

        /////////////////////////////////////////////////////////////////
        ////// GPS Subsystem
        "GPS": {
            "level": "WARNING" // Set this to DEBUG, to see results parsed from the GPS
        },
        "GPS.parser": {
            "level": "WARNING" // Set this to DEBUG, to see results parsed from the GPS
        },
        "GPS.fake": {
            "level": "WARNING"
        },

        /////////////////////////////////////////////////////////////////
        ////// Third party Libraries
        //
        // Silence logging of libraries that we use.
        //
        "PIL.PngImagePlugin": {
            "level": "WARNING"
        },
        "tetra3.Tetra3": {
            "level": "WARNING"
        },
        "picamera2.picamera2": {
            "level": "WARNING"
        },
        "grpc": {
            "level": "ERROR",
            "propagate": false,
            "handlers": ["null"]
        },
   }
}